"TonUtil.fif" include
"Asm.fif" include

{ ."usage: " @' $0 type ." <filename-base> <contract-addr> <file> <seq>" cr
    ."<file>      - file to load event info from" cr
    ."<seq>       - seq number from contract, use get_seq method to find last" cr
    ."Sets event info" cr
} : usage
// 2- -2 and '
$# 4 - 0< { usage bye } if

false constant bounce

$1 =: file-base
$2 false parse-load-address =: false 2=: contractAddr 
$3 =: eventInfoFile
$4 parse-int =: seq

file-base +".pk" load-keypair nip constant event_pk

60 constant timeout // timeout 60s

now timeout + 32 << 1- dup =: query_id

<b query_id 64 u, seq 16 u, 5 3 u, <b eventInfoFile file>B B, b> ref, b> constant msg

dup ."signing message: " msg <s csr. cr
msg hashu event_pk ed25519_sign_uint constant signing_bin

<b 
    b{1000100} s, 
    contractAddr addr, 
    0 Gram, 
    b{00} s,
    signing_bin B, 
    msg <s s, 
b>

dup ."External message for setting event info is " <s csr. cr
2 boc+>B // create bag of cells with crc32 embedded
dup Bx. cr // prints bag of cells in hex

"queries/ts-set-event-info.boc" tuck B>file // saves query
."(Saved set event info query to file " type .")" cr